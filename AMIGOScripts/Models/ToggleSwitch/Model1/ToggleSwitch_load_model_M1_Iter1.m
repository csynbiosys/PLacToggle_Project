function [model] = ToggleSwitch_load_model_M1_Iter1() 
 
 
model.input_model_type='charmodelC'; 
model.n_st=4; 
model.n_par=16; 
model.n_stimulus=2;  
model.stimulus_names=char('u_IPTG','u_aTc'); 
model.st_names=char('IPTGi','aTci','L_RFP','T_GFP'); 
model.par_names=char('k_in_IPTG','k_out_IPTG',... 
               'k_in_aTc','k_out_aTc',... 
               'kL_p_m0','kL_p_m','theta_T','theta_aTc','n_aTc','n_T',... 
               'kT_p_m0','kT_p_m','theta_L','theta_IPTG','n_IPTG','n_L'); 
 
model.eqns=...           
               char('dIPTGi = (k_in_IPTG*(u_IPTG-IPTGi)+((k_in_IPTG*(u_IPTG-IPTGi))^2)^0.5)/2-(k_out_IPTG*(IPTGi-u_IPTG)+((k_out_IPTG*(IPTGi-u_IPTG))^2)^0.5)/2',... 
                    'daTci = (k_in_aTc*(u_aTc-aTci)+((k_in_aTc*(u_aTc-aTci))^2)^0.5)/2-(k_out_aTc*(aTci-u_aTc)+((k_out_aTc*(aTci-u_aTc))^2)^0.5)/2',... 
                    'dL_RFP = 1/0.1386*(kL_p_m0 + (kL_p_m/(1+(T_GFP/theta_T*(1/(1+(aTci/theta_aTc)^n_aTc)))^n_T)))-0.0165*L_RFP',... 
                    'dT_GFP = 1/0.1386*(kT_p_m0 + (kT_p_m/(1+(L_RFP/theta_L*(1/(1+(IPTGi/theta_IPTG)^n_IPTG)))^n_L)))-0.0165*T_GFP'); 
 
model.par = [2.32299944390059812105e-02 ,1.16505558188096811079e-01 ,1.05054445367026762920e-02 ,5.18256850849403871706e-01 ,2.70120614465999301854e-03 ,1.22469904512570981758e+00 ,1.18259681944162284850e+01 ,4.28297577153824349239e+01 ,5.12499999999997779554e+00 ,5.12486121645086800669e+00 ,1.04905258416927021914e-02 ,3.33294299492412715580e+00 ,5.64569671080516783945e+01 ,9.50395466254782661508e-01 ,9.40196953246013489291e-01 ,4.34135235966028876220e+00 ,]; 
end 
